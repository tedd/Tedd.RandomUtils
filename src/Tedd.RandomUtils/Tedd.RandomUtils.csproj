<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net462;netstandard2.0;netstandard2.1;netcoreapp3.1;net5.0;net6.0</TargetFrameworks>
    <!--<TargetFramework>net6.0</TargetFramework>-->
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Authors>Tedd Hansen</Authors>
    <Company>Tedd Hansen</Company>
    <Description>100% unit test code coverage: FastRandom, ConcurrentRandom (thread safe random), CryptoRandom (rng crypto grade random), ConcurrentCryptoRandom, Next-methods for datatypes: SByte, Byte, Int16, UInt16, Int32, UInt32, Int64, UInt64, short, int, long, string. This packet replaces Tedd.MoreRandom and Tedd.RandomExtensions.</Description>
    <PackageTags>FastRandom ConcurrentRandom Fast Thread safe Lockless RNG Crypto Random System.Random NextSByte NextByte NextInt64 NextUInt16 NextInt32 NextUInt32 NextInt64 NextUInt64</PackageTags>
    <Copyright>Tedd Hansen</Copyright>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <PackageProjectUrl>https://github.com/tedd/Tedd.RandomUtils</PackageProjectUrl>
    <RepositoryUrl>https://github.com/tedd/Tedd.RandomUtils</RepositoryUrl>
    <RepositoryType>Git</RepositoryType>
    <Version>1.0.6</Version>
    <PackageReleaseNotes>
Added FastRandom based on Lehmer which is 70% faster than System.Random.
Increased speed of ConcurrentRandom by 25% by avoiding ThreadLocal.
Increased speed of FastRandom Single/Double to 38% of System.Random.</PackageReleaseNotes>
  </PropertyGroup>
  <ItemGroup Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(TargetFramework)', '^(net4|netcoreapp2|netstandard)'))">
    <PackageReference Include="System.Runtime.CompilerServices.Unsafe" Version="5.0.0" />
  </ItemGroup>

  <PropertyGroup>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>
  <PropertyGroup Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(TargetFramework)', '^(net(46[1-9]|4[7-9]|[5-9])|netstandard(2\.[1-9]|[3-9]\d*\.)|netcoreapp(2\.[1-9]|[3-9]\.))'))">
    <DefineConstants>$(DefineConstants);HASSPAN;HAS_SYSTEMBUFFERS</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(TargetFramework)', '^net4'))">
    <DefineConstants>$(DefineConstants);NETFRAMEWORK</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(TargetFramework)', '^net6'))">
    <DefineConstants>$(DefineConstants);NET6</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(TargetFramework)', '^(netcoreapp|netstandard2\.1|net[56789])'))">
    <DefineConstants>$(DefineConstants);NETCOREAPP</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(TargetFramework)', '^(net4|netcoreapp2|netstandard)'))">
    <DefineConstants>$(DefineConstants);BEFORENETCOREAPP3</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(TargetFramework)', '^netstandard2\.1'))">
    <DefineConstants>$(DefineConstants);NETSTANDARD21</DefineConstants>
  </PropertyGroup>

  <ItemGroup Condition="$(TargetFramework.StartsWith('net4'))">
    <PackageReference Include="System.Memory" Version="4.5.4" />
    <PackageReference Include="System.Buffers" Version="4.5.1" />
  </ItemGroup>



  <ItemGroup>
    <None Include="..\..\LICENSE">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>


</Project>
